{
	"nodeTypes": {
	  "broker": {
		"interfaceConfig": {
		  "title": "Broker",
		  "subtitle": "Handles messaging",
		  "icon": "LeakAddIcon",
		  "draggable": true,
		  "handles": [
			{ "type": "target" }
		  ],
		  "parameters": [
			{ "name": "communication_protocol", "default": "MQTT" },
			{ "name": "title", "default": "broker" },
			{ "name": "host", "default": "localhost" },
			{ "name": "port", "default": 1883 },
			{ "name": "ssl", "default": "true" },
			{ "name": "vhost", "default": "default_vhost" },
			{ "name": "topicExchange", "default": "default_topic_exchange" },
			{ "name": "rpcExchange", "default": "default_rpc_exchange" },
			{ "name": "db", "default": 0 },
			{ "name": "username", "default": "username" },
			{ "name": "password", "default": "password" }
		  ]
		},
		"grammar": {
		  "endKeyword": "end",
		  "startPattern": "Broker<${communication_protocol}> ${title}",
		  "parameters": [
			{ "name": "communication_protocol", "prefix": "communication_protocol:", "inputType": "autocomplete", "options": ["MQTT", "AMQP", "Redis"] },
			{ "name": "title" },
			{ "name": "host", "prefix": "host:" },
			{ "name": "port", "prefix": "port:", "type": "number" },
			{ "name": "ssl", "prefix": "ssl:", "type": "boolean", "unQuoted":true, "inputType": "autocomplete", "options": ["true", "false"] },
			{ "name": "vhost", "prefix": "vhost:", "visibleCondition": { "communication_protocol": "AMQP" } },
			{ "name": "topicExchange", "prefix": "topicExchange:", "visibleCondition": { "communication_protocol": "AMQP" } },
			{ "name": "rpcExchange", "prefix": "rpcExchange:", "visibleCondition": { "communication_protocol": "AMQP" } },
			{ "name": "db", "prefix": "db:", "unQuoted":true, "type": "number", "visibleCondition": { "communication_protocol": "Redis" } },
			{ "name": "username", "prefix": "username:" },
			{ "name": "password", "prefix": "password:" }
		  ],
		  "nestedParameters": [
			{ "name": "auth", "prefix": "auth:", "parameters": ["username", "password"] }
		  ]
		}
	  },
	  "sensor": {
		"interfaceConfig": {
		  "title": "Sensor",
		  "subtitle": "Collects data",
		  "icon": "SensorsIcon",
		  "draggable": true,
		  "handles": [
			{ "type": "source", "parameterDependency": "broker", "handleTarget": "broker", "connectionLimit": { "broker": "1", "sensor": "-1" } }
		  ],
		  "parameters": [
			{ "name": "title", "default": "sensor" },
			{ "name": "entityType", "default": "sensor"},
			{ "name": "topic", "default": "A_NAME" },
			{ "name": "broker", "default": "", "inputType": "autocomplete"},
			{ "name": "freq", "default": 3, "inputType": "slider" , "marks": [1, "...", 10] },
			{ "name": "attributes", "inputType": "dynamicInputs"}
		  ]
		},
		"grammar": {
		  "parameterException":"entityType",
		  "endKeyword": "end",
		  "startPattern": "Entity ${title}",
		  "parameters": [
			{ "name": "title" },
			{ "name": "entityType", "prefix": "type:", "unQuoted": true, 
			"inputType": "autocomplete",
			"options": ["actuator","sensor"] },
			{ "name": "topic", "prefix": "topic:", "dependency": "metadata" },
			{ "name": "broker", "prefix": "broker:", "unQuoted": true, "dependency": "broker" },
			{ "name": "freq", "prefix": "freq:", "type": "number", "inputType": "slider"}
		  ],
		  "nestedParameters": [
			{
			  "name": "attributes",
			  "prefix": "- ",
			  "delimiter": ":",
			  "parameters": ["name", "type"]
			}
		  ],
		  "dependencies": {
			"broker": { "parameter": "title" },
			"metadata": { "initFormat": "${name}.sensor.${this.title}" }
		  }
		}
	  },
	  "actuator": {
		"interfaceConfig": {
		  "title": "Actuator",
		  "subtitle": "Performs actions",
		  "icon": "PlayForWorkIcon",
		  "draggable": true,
		  "handles": [
			{ "type": "source", "parameterDependency": "broker", "handleTarget": "broker", "connectionLimit": { "broker": "1", "actuator": "-1" } }
		  ],
		  "parameters": [
			{ "name": "title", "default": "actuator" },
			{ "name": "entityType", "default": "actuator"},
			{ "name": "topic", "default": "A_NAME" },
			{ "name": "broker", "default": "" , "inputType": "autocomplete"},
			{ "name": "attributes", "inputType": "dynamicInputs", "types": ["input", "dropdown"]}
		  ]
		},
		"grammar": {
		  "endKeyword": "end",
		  "startPattern": "Entity ${title}",
		  "parameterException":"entityType",
		  "parameters": [
			{ "name": "title" },
			{ "name": "entityType", "prefix": "type:","unQuoted": true, 
			"inputType": "autocomplete",
			"options": ["actuator","sensor"]},
			{ "name": "topic", "prefix": "topic:", "dependency": "metadata" },
			{ "name": "broker", "prefix": "broker:", "unQuoted": true, "dependency": "broker" }
		  ],
		  "nestedParameters": [
			{
			  "name": "attributes",
			  "prefix": "- ",
			  "delimiter": ":",
			  "parameters": ["name", "type"],
			  "options": ["float", "number", "string", "bool", "dist", "list"]
			}
		  ],
		  "dependencies": {
			"broker": { "parameter": "title" },
			"metadata": { "initFormat": "${name}.actuators.${this.title}" }
		  }
		}
	  },  
	  "automation": {
		"interfaceConfig": {
		  "title": "Automation",
		  "subtitle": "Automates tasks",
		  "icon": "HdrAutoIcon",
		  "draggable": true,
		  "handles": [
			{
			  "type": "source",
			  "style": { "top": 20, "background": "#00FF00" },
			  "parameterDependency": "starts",
			  "handleTarget": "automation",
			  "connectionLimit": { "automation": "-1", "starts": "-1" }
			},
			{
			  "type": "source",
			  "style": { "top": 40, "background": "#00FF00" },
			  "parameterDependency": "stops",
			  "handleTarget": "automation",
			  "connectionLimit": { "automation": "-1", "stops": "-1" }
			},
			{
			  "type": "source",
			  "style": { "top": 60, "background": "#00FF00" },
			  "parameterDependency": "after",
			  "handleTarget": "automation",
			  "connectionLimit": { "automation": "-1", "stops": "-1" }
			},
			{ "type": "target" }
		  ],
		  "colorConfig": {
			"starts": { "startColor": "#6bbf59", "endColor": "#b0f7a6" },
			"stops": { "startColor": "#d15959", "endColor": "#f7a6a6" },
			"after": { "startColor": "#ff9900", "endColor": "#ffcc66" }
		  },
		  "parameters": [
			{ "name": "title", "default": "automation" },
			{
			  "name": "condition",
			  "default": "",
			  "multiLine": true,
			  "helperType": ["sensor"]
			},
			{
			  "name": "enabled",
			  "default": true, 
			  "inputType": "switch" 
			},
			{
			  "name": "delay",
			  "default": "0.0", 
			  "inputProps": { "step": "0.1" } 
			},
			{
			  "name": "continuous",
			  "default": false, 
			  "inputType": "switch" 
			},
			{
			  "name": "checkOnce",
			  "default": false, 
			  "inputType": "switch" 
			},
			{
			  "name": "actions",
			  "inputType": "dynamicInputs"
			},
			{
			  "name": "starts",
			  "inputType": "autocomplete",
			  "multiple": true
			},
			{
			  "name": "stops",
			  "multiple": true,
			  "inputType": "autocomplete"
			},
			{
			  "name": "after",
			  "multiple": true,
			  "inputType": "autocomplete"
			}
		  ]
		},
		"grammar": {
		  "endKeyword": "end",
		  "startPattern": "Automation ${title}",
		  "parameters": [
			{ "name": "title" },
			{ "name": "condition", "prefix": "condition:", "unQuoted": true},
			{ "name": "enabled", "prefix": "enabled:", "type": "boolean"},
			{ "name": "delay", "prefix": "delay:", "type": "number"},
			{ "name": "continuous", "prefix": "continuous:", "type": "boolean"},
			{ "name": "checkOnce", "prefix": "checkOnce:", "type": "boolean"}
		  ],
		  "nestedParameters": [
			{
			  "name": "actions",
			  "prefix": "- ",
			  "delimiter": ":",
			  "parameters": ["name", "value"],
			  "inputTypes": ["dropdown", "dynamicInput"],
			  "options": ["actuator", "getInputByType"],
			  "connectedLabels": ["name", "value"]
			},
			{
			  "name": "starts",
			  "prefix": "- ",
			  "dependency": "automation"
			},
			{
			  "name": "stops",
			  "prefix": "- ",
			  "dependency": "automation"
			},
			{
			  "name": "after",
			  "prefix": "- ",
			  "dependency": "automation"
			}
		  ],
		  "dependencies": {
			"automation": { "parameter": "title" },
			"actuator": { "format": "${title}.${attributes.name}" },
			"sensor": { "format": "${title}.${attributes.name}" }
		  }
		}
	  },
	  "metadata": {
		"interfaceConfig": {
		  "title": "Metadata",
		  "subtitle": "Model information",
		  "icon": "metadataIcon",
		  "draggable": false,
		  "parameters": [
			{ "name": "name", "default": "name" },
			{ "name": "version", "default": "1.0.0" },
			{ "name": "description", "default": "description_here" },
			{ "name": "author", "default": "author_name_here" },
			{ "name": "email", "default": "email_here" }
		  ]
		},
		"grammar": {
		  "endKeyword": "end",
		  "startPattern": "Metadata",
		  "parameters": [
			{ "name": "name", "prefix": "name:", "unQuoted": true },
			{ "name": "version", "prefix": "version:" },
			{ "name": "description", "prefix": "description:" },
			{ "name": "author", "prefix": "author:" },
			{ "name": "email", "prefix": "email:" }
		  ]
		}
	  },
	  "rtMonitor": {
		"interfaceConfig": {
		  "title": "RTMonitor",
		  "subtitle": "Runtime monitor",
		  "icon": "rtMonitorIcon",
		  "draggable": false,
		  "parameters": [
			{ "name": "broker", "default": "" },
			{ "name": "namespace", "default": "0.1.0" },
			{ "name": "eventTopic", "default": "event" },
			{ "name": "logsTopic", "default": "logs" }
		  ]
		},
		"grammar": {
		  "endKeyword": "end",
		  "startPattern": "RTMonitor",
		  "parameters": [
			{ "name": "broker", "prefix": "broker:", "inputType": "autocomplete", "unQuoted": true },
			{ "name": "namespace", "prefix": "namespace:" },
			{ "name": "eventTopic", "prefix": "eventTopic:" },
			{ "name": "logsTopic", "prefix": "logsTopic:" }
		  ],
		  "dependencies": {
			"broker": { "parameter": "title" }
		  }
		}
	  }
	}
  }
  